CHIP ALUcore 
{
	IN a[8], b[8], carryIn, sums, ands, xors, ors,srs,nDb,zeroA;
	OUT out[8], carryOut,overflow;

PARTS:
	ZeroOrIn(in=a,z=zeroA,out=zA);
	NegateOrIn(in=b,z=nDb,out=nB);
	//sums
	//IN a[8], b[8], carryIn;
	//OUT out[8], carry, overflow;
	Add8C(a=zA,b=nB,carryIn=carryIn,out=addoutput,carry=carry,overflow=overflowadd);
	//ands
	//IN  a[8], b[8];
    //OUT out[8];
	And8(a=zA,b=nB,out=andoutput);
	//ors
	//IN  a[8], b[8];
    //OUT out[8];
	Or8(a=zA,b=nB,out=oroutput);
	//xors
	//IN  a[8], b[8];
    //OUT out[8];
	Xor8(a=zA,b=nB,out=xoroutput);
	//which output to choose
	Muxoperations8(a=addoutput,b=andoutput,x=xoroutput,y=oroutput,sums=sums,ands=ands,xors=xors,ors=ors,out=output);
	//shift
	//IN in[8];
	//OUT out[8], carryOut;
	Shift8(in=zA,out=shiftout,carryOut=shiftcarry);
	//do we shift?
	Mux8(a=output,b=shiftout,sel=srs,out=out);
	//which carry?
	//if addition then set carry to addition/ not addition
	Mux1(a=false,b=carry,sel=sums,out=carry1);
	//if shift then set to shift, or keep as addition if not shift
	Mux1(a=carry1,b=shiftcarry,sel=srs,out=carryOut);
	//set overflow only if addition took place
	Mux1(a=false,b=overflowadd,sel=sums,out=overflow);
	




}