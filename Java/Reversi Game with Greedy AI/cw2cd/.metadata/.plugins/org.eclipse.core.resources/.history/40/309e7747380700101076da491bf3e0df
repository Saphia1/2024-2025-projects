package reversi;


import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;

import javax.swing.JButton;
//You will need to draw a green square, a black border, and white/black circle with a border around the circle in the opposite colour.
public class BoardSquareButton extends JButton
{
	Color drawColor; 
	Color borderColor;
	int borderSize;
	int piece = 0;

	
	public BoardSquareButton(int width, int height, Color color,
			int borderWidth, Color borderCol, int piece )
	{
		this.piece=piece;
		borderSize = borderWidth;
		drawColor = color;
		borderColor = Color.black;
		setMinimumSize( new Dimension(width, height) );
		setPreferredSize( new Dimension(width, height) );
	}

	public BoardSquareButton( int width, int height, Color color )
	{
		// Call the other constructor with some default values
		this( width, height, color, 0, null );
	}

	public Color getDrawColor()
	{
		return drawColor;
	}

	public void setDrawColor(Color drawColor)
	{
		this.drawColor = drawColor;
	}

	public Color getBorderColor()
	{
		return borderColor;
	}

	public void setBorderColor(Color borderColor)
	{
		this.borderColor = borderColor;
	}

	public int getBorderSize()
	{
		return borderSize;
	}

	public void setBorderSize(int borderSize)
	{
		this.borderSize = borderSize;
	}

	protected void paintComponent(Graphics g)
	{
		super.paintComponent(g);
		//g.setColor(drawColor);
		//g.fillRect(0, 0, getWidth(), getHeight());
		
		//g.setColor(Color.BLACK);
		//g.fillRect(0, 0, getWidth(), getHeight());
		
		if ( borderColor != null )
		{
			g.setColor(borderColor);
			g.fillRect(0, 0, getWidth(), getHeight());
		}
		if ( drawColor != null )
		{
			g.setColor(drawColor);
			g.fillRect(borderSize, borderSize, getWidth()-borderSize*2, getHeight()-borderSize*2);
		}
		if (piece == 1) {
			//Color fill = Color.black;
			//Color border = Color.white;
			int padding = 4;
			int diameter = getWidth()- 2 * padding;
			g.setColor(Color.white);
			g.fillOval(padding, padding, diameter, diameter);
			g.setColor(Color.black);
			g.fillOval(padding, padding, diameter, diameter);
		}
		else if (piece == 2) {
			int padding = 4;
			int diameter = getWidth()- 2 * padding;
			g.setColor(Color.black);
			g.fillOval(padding, padding, diameter, diameter);
			g.setColor(Color.white);
			g.fillOval(padding, padding, diameter, diameter);
		}
		
	}

}