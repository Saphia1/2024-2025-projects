package reversi;

public class ReversiController implements IController {

	IModel model;
	IView view;

	@Override
	public void initialise(IModel model, IView view)
	{
		this.model = model;
		this.view = view;
	}
	
	public void startup() {
		for (int y=0;y<8;y++) {
		     for (int x = 0; x < 8; x++) {
		    	model.setBoardContents(x, y, 0);   	     	 
		     }
		}
		
		model.setBoardContents(3, 3, 2);
		model.setBoardContents(4, 4, 2);
		model.setBoardContents(3, 4, 1);
		model.setBoardContents(4, 3, 1);
		
		model.setPlayer(1);
		model.setFinished(false);
		view.refreshView();
	}
	
	
	public void update() {
		
	}
	
	//@Override
	public void squareSelected( int player, int x, int y ) {
		int other=0;
		if (player==1) {
			other = 2;
		}
		else {
			other = 1;
		}
		System.out.print("Clicked tile\n");
		if (isMoveValid(x, y, player)==true) {
			if((model.getPlayer())==player) {
				System.out.print("Valid\n");
				model.setBoardContents(x, y, player);
				model.setPlayer(other);
				if (player ==1) {
					view.feedbackToUser(player,"White player – not your\r\n"+ "turn");
					view.feedbackToUser(2,"Black player – choose where to\\r\\n\"\r\n" + "put your piece");
				}
				else {
					view.feedbackToUser(player, null);
				}
				
				view.refreshView();
			}
			else if((model.getPlayer())!=player) {
				System.out.print("Not your turn\n");
				
			}
			
		}
		else {
			if((model.getPlayer())==player) {
				System.out.print("Invalid location to play a piece\n");
			}
			else if((model.getPlayer())!=player) {
				System.out.print("Not your turn\n");
			}
			
		}
	}
	
	public boolean isMoveValid(int x, int y, int player) {
		if (model.getBoardContents(x, y)!=0) {
			return false;
		}
		int other=0;
		if (player==1) {
			other = 2;
		}
		else {
			other = 1;
		}
	    for (int dx = -1; dx <= 1; dx++) {
	        for (int dy = -1; dy <= 1; dy++) {        	
	            if (dx == 0 && dy == 0) {
	            	continue; //skip current square
	            } 
	            int cx = x + dx;
	            int cy = y + dy;
	            boolean seenOpponent = false;
	            while (cx >= 0 && cx < 8 && cy >= 0 && cy < 8) {
	                int piece = model.getBoardContents(cx, cy);
	                if (piece == other) {
	                    seenOpponent = true;
	                } 
	                else if (piece == player) {
	                    if (seenOpponent) {
	                    	return true;
	                    }
	                    else {
	                    	break; 
	                    }
	                } 
	                else {
	                    break;
	                }

	                cx += dx;
	                cy += dy;
	            }
	        }
	    }
	    return false;
	}
	
	
	
	public void doAutomatedMove( int player ) {
		System.out.print("Clicked\n");
	}



}
